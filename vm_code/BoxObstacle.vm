function BoxObstacle.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push pointer 0
call BoxObstacle.reset 1
pop temp 0
push static 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 30
pop static 0
label IF_FALSE0
push pointer 0
return
function BoxObstacle.decrement_rightmost 0
push static 0
push constant 1
sub
pop static 0
push static 0
push constant 30
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 29
pop static 0
label IF_FALSE0
push constant 0
return
function BoxObstacle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BoxObstacle.x 0
push argument 0
pop pointer 0
push this 8
return
function BoxObstacle.update 0
push argument 0
pop pointer 0
push this 6
push constant 30
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
sub
pop this 2
push this 6
push constant 1
sub
pop this 6
push this 8
push constant 1
sub
pop this 8
push constant 0
return
label IF_FALSE0
push this 2
call Graphics.BoxEnd1 1
pop temp 0
push this 4
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
call Graphics.drawBoxPos1 1
pop temp 0
goto IF_END2
label IF_FALSE2
push this 5
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
call Graphics.drawBoxPos2 1
pop temp 0
goto IF_END3
label IF_FALSE3
push this 5
push constant 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
call Graphics.drawBoxPos3 1
pop temp 0
goto IF_END4
label IF_FALSE4
push this 5
push constant 4
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 2
call Graphics.drawBoxPos4 1
pop temp 0
goto IF_END5
label IF_FALSE5
push this 5
push constant 5
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 2
call Graphics.drawBoxPos5 1
pop temp 0
goto IF_END6
label IF_FALSE6
push this 5
push constant 6
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 2
call Graphics.drawBoxPos6 1
pop temp 0
goto IF_END7
label IF_FALSE7
push this 5
push constant 7
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 2
call Graphics.drawBoxPos7 1
pop temp 0
goto IF_END8
label IF_FALSE8
push this 5
push constant 8
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 2
push constant 1
sub
pop this 2
push this 6
push constant 1
sub
pop this 6
push this 8
push constant 1
sub
pop this 8
push this 2
call Graphics.drawBoxPos8 1
pop temp 0
push constant 0
pop this 5
label IF_FALSE9
label IF_END8
label IF_END7
label IF_END6
label IF_END5
label IF_END4
label IF_END3
label IF_END2
goto IF_END1
label IF_FALSE1
push this 4
push constant 1
neg
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push this 5
push constant 1
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push this 2
call Graphics.BoxEnd1 1
pop temp 0
goto IF_END11
label IF_FALSE11
push this 5
push constant 2
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push this 2
call Graphics.BoxEnd2 1
pop temp 0
goto IF_END12
label IF_FALSE12
push this 5
push constant 3
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push this 2
call Graphics.BoxEnd3 1
pop temp 0
goto IF_END13
label IF_FALSE13
push this 5
push constant 4
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push this 2
call Graphics.BoxEnd4 1
pop temp 0
goto IF_END14
label IF_FALSE14
push this 5
push constant 5
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push this 2
call Graphics.BoxEnd5 1
pop temp 0
goto IF_END15
label IF_FALSE15
push this 5
push constant 6
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push this 2
call Graphics.BoxEnd6 1
pop temp 0
push constant 0
pop this 5
push pointer 0
call BoxObstacle.reset 1
pop temp 0
label IF_FALSE16
label IF_END15
label IF_END14
label IF_END13
label IF_END12
label IF_END11
label IF_FALSE10
label IF_END1
push this 2
push this 3
eq
push this 4
and
push constant 0
gt
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push constant 0
pop this 5
push constant 0
pop this 8
push this 4
neg
pop this 4
label IF_FALSE17
push this 5
push constant 1
add
pop this 5
push constant 0
return
function BoxObstacle.reset 0
push argument 0
pop pointer 0
push constant 21
pop this 0
push constant 1
pop this 1
push constant 244
push this 0
sub
pop this 7
push static 0
push constant 20
push constant 400
call LCGRandom.randRange 2
add
pop this 6
push this 6
pop static 0
push constant 244
pop this 9
push this 6
push this 1
add
pop this 8
push constant 7808
push this 0
push constant 32
call Math.multiply 2
sub
pop this 3
push this 3
push this 6
add
pop this 2
push constant 0
pop this 5
push constant 1
pop this 4
push constant 0
return
function BoxObstacle.collision 0
push argument 0
pop pointer 0
push this 8
push constant 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
pop this 8
label IF_FALSE0
push this 6
push argument 3
gt
push argument 1
push this 8
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push this 7
push argument 4
gt
push argument 2
push this 9
gt
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push constant 0
not
return
